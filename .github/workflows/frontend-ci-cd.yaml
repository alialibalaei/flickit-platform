name: CI/CD Frontend

on:
  push:
    branches:
      - '*'
    paths:
      - frontend/**
    tags:
      - '*'

  pull_request:
    branches:
      - '*'
    paths:
      - frontend/**



jobs:
  Build_Frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build
        run: docker build -t frontend ./frontend



  Sonar:
   needs: Build_Frontend
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v2
     - name: SonarCloud Scan
       uses: SonarSource/sonarcloud-github-action@master
       env:
         GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Frontend_Push_Latest_Image:
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    needs: Sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: create image from repository
        run: docker build -t ghcr.io/flickit-platform-dev/flickit-platform-frontend:"${GITHUB_SHA:0:7}" ./frontend
      - name: login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: flickit-platform-dev
          password: ${{ secrets.GH_PACKAGES_TOKEN }}
      - name: push image to GitHub Container Registry
        run: docker push ghcr.io/flickit-platform-dev/flickit-platform-frontend:"${GITHUB_SHA:0:7}"

  Frontend_Deploy_Latest:
    needs: Frontend_Push_Latest_Image
    container: hamravesh.hamdocker.ir/public/darkube-cli:v1.1
    runs-on: ubuntu-latest
    steps:
      - name: Run script
        run: darkube deploy --ref main --token ${DARKUBE_DEPLOY_TOKEN} --app-id ${DARKUBE_APP_ID}  --image-tag "${GITHUB_SHA:0:7}" --job-id "$GITHUB_RUN_ID" --stateless-app true
        env:
          DARKUBE_DEPLOY_TOKEN: ${{ secrets.DARKUBE_DEPLOY_TOKEN_FRONTEND_STAGE }}
          DARKUBE_APP_ID: ${{ secrets.DARKUBE_APP_ID_FRONTEND_STAGE }}


  Frontend_Push_Image:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
    needs: Sonar
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.TAG.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Set output
        id: TAG
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.TAG.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.TAG.outputs.tag }}
      - name: login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: flickit-platform-dev
          password: ${{ secrets.GH_PACKAGES_TOKEN }}
      - uses: actions/checkout@v2
      - name: create image from repository
        run: docker build -t ghcr.io/flickit-platform-dev/flickit-platform-frontend:${{ steps.TAG.outputs.tag }} ./frontend
      - name: push image to GitHub Container Registry
        run: docker push ghcr.io/flickit-platform-dev/flickit-platform-frontend:${{ steps.TAG.outputs.tag }}

  Frontend_Deploy:
    needs: Frontend_Push_Image
    container: hamravesh.hamdocker.ir/public/darkube-cli:v1.1
    runs-on: ubuntu-latest
    steps:
      - name: Run script
        run: darkube deploy --ref master --token ${DARKUBE_DEPLOY_TOKEN} --app-id ${DARKUBE_APP_ID}  --image-tag "${TAG}" --job-id "$GITHUB_RUN_ID" --stateless-app true
        env:
          DARKUBE_DEPLOY_TOKEN: ${{ secrets.DARKUBE_DEPLOY_TOKEN_FRONTEND }}
          DARKUBE_APP_ID: ${{ secrets.DARKUBE_APP_ID_FRONTEND }}
          TAG: ${{needs.Frontend_Push_Image.outputs.TAG}}  
